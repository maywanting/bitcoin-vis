{"version":3,"sources":["index.js"],"names":["App","props","state","estimated","min","income","priceInUSD","value","fetch","then","response","json","jsondata","num","date","push","x","y","parseFloat","setState","console","log","className","height","width","title","data","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAYMA,E,YACF,WAAaC,GAAQ,IAAD,8BAChB,4CAAOA,KACFC,MAAQ,CACTC,UAAW,GACXC,IAAK,GACLC,OAAQ,GACRC,WAAY,GACZC,MAAO,IAPK,E,iFAUC,IAAD,OAChB,OAAOC,MAAM,iBAAiBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACjE,IAAIT,EAAY,GACZC,EAAM,GACNC,EAAS,GACTC,EAAa,GACbC,EAAQ,GACRM,EAAM,EACV,IAAK,IAAIC,KAAQF,EACbT,EAAUY,KAAK,CAACC,EAAGH,EAAKI,EAAGC,WAAWN,EAASE,GAAT,aACtCV,EAAIW,KAAK,CAACC,EAAGH,EAAKI,EAAGC,WAAWN,EAASE,GAAT,OAChCT,EAAOU,KAAK,CAACC,EAAGH,EAAKI,EAAGC,WAAWN,EAASE,GAAT,UACnCR,EAAWS,KAAK,CAACC,EAAGH,EAAKI,EAAGC,WAAWN,EAASE,GAAT,cACvCP,EAAMQ,KAAK,CAACC,EAAGH,EAAKI,EAAGC,WAAWN,EAASE,GAAT,SAClCD,IAEJ,EAAKM,SAAS,CACVhB,UAAWA,EACXC,IAAKA,EACLC,OAAQA,EACRC,WAAYA,EACZC,MAAOA,IAEXa,QAAQC,IAAI,EAAKnB,MAAMC,e,+BAK3B,OACI,yBAAKmB,UAAU,OACX,kBAAC,IAAD,CAAQC,OAAQ,IAAKC,MAAO,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOC,MAAM,+CACb,kBAAC,IAAD,CAAOA,MAAM,QACb,kBAAC,IAAD,CAAYC,KAAMC,KAAKzB,MAAMC,YAC7B,kBAAC,IAAD,CAAYuB,KAAMC,KAAKzB,MAAME,OAEjC,kBAAC,IAAD,CAAQmB,OAAQ,IAAKC,MAAO,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOC,MAAM,qDACb,kBAAC,IAAD,CAAOA,MAAM,QACb,kBAAC,IAAD,CAAYC,KAAMC,KAAKzB,MAAMG,UAEjC,kBAAC,IAAD,CAAQkB,OAAQ,IAAKC,MAAO,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOC,MAAM,sDACb,kBAAC,IAAD,CAAOA,MAAM,YACb,kBAAC,IAAD,CAAYC,KAAMC,KAAKzB,MAAMI,cAEjC,kBAAC,IAAD,CAAQiB,OAAQ,IAAKC,MAAO,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOC,MAAM,iEACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYC,KAAMC,KAAKzB,MAAMK,c,GApE/BqB,IAAMC,WA2ExBC,IAASC,OACP,kBAAC/B,EAAD,MACAgC,SAASC,eAAe,W","file":"static/js/main.2fe46d3f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/react-vis/dist/style.css';\nimport {\n    XYPlot,\n    LineSeries,\n    VerticalGridLines,\n    HorizontalGridLines,\n    XAxis,\n    YAxis,\n} from 'react-vis';\n\nclass App extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            estimated: [],\n            min: [],\n            income: [],\n            priceInUSD: [],\n            value: [],\n        };\n    }\n    componentDidMount() {\n        return fetch('../value.json').then(response => response.json()).then(jsondata => {\n            let estimated = [];\n            let min = [];\n            let income = [];\n            let priceInUSD = [];\n            let value = [];\n            let num = 0;\n            for (let date in jsondata) {\n                estimated.push({x: num, y: parseFloat(jsondata[date]['estimated'])});\n                min.push({x: num, y: parseFloat(jsondata[date]['min'])});\n                income.push({x: num, y: parseFloat(jsondata[date]['income'])});\n                priceInUSD.push({x: num, y: parseFloat(jsondata[date]['priceInUSD'])});\n                value.push({x: num, y: parseFloat(jsondata[date]['value'])});\n                num++;\n            }\n            this.setState({\n                estimated: estimated,\n                min: min,\n                income: income,\n                priceInUSD: priceInUSD,\n                value: value,\n            });\n            console.log(this.state.estimated);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <XYPlot height={200} width={1200}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis title=\"每年电力消耗值\"/>\n                    <YAxis title=\"TWh\"/>\n                    <LineSeries data={this.state.estimated} />\n                    <LineSeries data={this.state.min} />\n                </XYPlot>\n                <XYPlot height={200} width={1200}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis title=\"每天的块收益加和\"/>\n                    <YAxis title=\"BTC\"/>\n                    <LineSeries data={this.state.income} />\n                </XYPlot>\n                <XYPlot height={200} width={1200}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis title=\"bitcoin每日的平均价格\"/>\n                    <YAxis title=\"BTC/USD\"/>\n                    <LineSeries data={this.state.priceInUSD} />\n                </XYPlot>\n                <XYPlot height={200} width={1200}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis title=\"计算的每日算力总价值\"/>\n                    <YAxis/>\n                    <LineSeries data={this.state.value} />\n                </XYPlot>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}